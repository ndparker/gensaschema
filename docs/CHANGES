Changes with version 0.6.8

 *) Emit separate PG enum objects. Thanks to happyraul and armonge for the PRs.

 *) Run black formatter

 *) Update project boilerplate


Changes with version 0.6.7

 *) Adaptions for SA 2.0

 *) Update project boilerplate


Changes with version 0.6.6

 *) Add support for Identity server default

 *) Update project boilerplate


Changes with version 0.6.5

 *) Add support for SQLAlchemy 1.4

 *) Update python support: 2.7, 3.6+

 *) Add tests to source distribution

 *) Update doc format

 *) Update project boilerplate


Changes with version 0.6.4

 *) Fix a repr() issue with sqlalchemy 1.3 (#2)

 *) Remove support for Python 3.3

 *) Docs are no longer installed locally

 *) Adapt to latest sphinx version


Changes with version 0.6.3

 *) Fix setup in C locale


Changes with version 0.6.2

 *) Add support for python 3.7

 *) Revise the setup and build system


Changes with version 0.6.1

 *) Add support for nested type reflection

 *) Fall back to generic types module if dialect lookup fails

 *) Add flake8 hint to the template in order to ignore generated schema files


Changes with version 0.6.0

 *) First beta release

 *) Allow for custom repr functions per type or type instance. This is most
    useful for separated type definitions. This is modeled as a mapping from
    type to repr function, where the type can be a type instance, a type class
    or a type class name. The repr function is called with the type instance,
    the dialect and the symbol table. It's expected to return a string.

 *) Improved error handling for symbol injection. If a symbol is added multiple
    times it only throws a conflict error on conflict (not always). Also allow
    for `'symbol' in symbols` check.

 *) Allow for custom type definitions on top of the table definitions. This is
    modeled as a list of definer functions stored in symbols.types.defines (a
    list). The functions are called in order with the dialect name and the
    symbol table and are expected to return a list of lines to emit.

 *) Added hook for unknown type injection, make the `Type` wrapper part of the
    public API for that reason

 *) Ignore SA warning about expressional and partial index reflections
    [@sebastianseitz]


Changes with version 0.5.4

 *) Fixed symbol table creation without any extra symbols

 *) More python3 fixes:
    - Fixed one itervalues() leftover
    - use inspect.signature() if available, instead of .getargspec()
    - Fix constraint ordering (cmp() ./. Py3)


Changes with version 0.5.3

 *) Type instances were not being inspected properly (leftover from py3
    transition)


Changes with version 0.5.1 + 0.5.2

 *) Various python3 fixes


Changes with version 0.5.0

 *) First alpha release
